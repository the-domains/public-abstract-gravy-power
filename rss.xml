<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[public abstract Gravy : Power]]></title>
        <description><![CDATA[public abstract Gravy : Power]]></description>
        <link>https://thegrid.ai/public-abstract-gravy-power/</link>
        <generator>The Grid</generator>
        <lastBuildDate>Mon, 04 Jan 2016 06:08:21 GMT</lastBuildDate>
        <atom:link href="https://thegrid.ai/public-abstract-gravy-power/rss.xml" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[To check in dependencies or not to check in dependencies]]></title>
            <description><![CDATA[<article><h1>To check in dependencies or not to check in dependencies</h1><p>I have been playing around in the world of Drupal and Front End development for the last few months and have come across a topic of discussion that I thought I had heard the last of. Check in dependencies or not?  This is something that I have thought about a lot in terms of .NET development and I came to the conclusion in that space that I should not check in my dependencies. Now this all comes down to personal preference but this is what I think.  If you are serious about development you would have heard of Continuous Delivery, this is the practice of promoting code through a series of environments (Test, QA, UAT, Production, etc) with a click of a button. If you have not head of it before then head on over to Martin Fowler’s Bliki and have a read about it, I see it as the big brother of Continuous Integration.  When I practice Continuous Delivery and build a project the output is a package of some kind that can be deployed into any of the environments in my deployment pipeline. This package is built once and contains all dependencies.  The arguments for checking in dependences into VCS I have been reading about lately mainly revolve around installing dependencies at deployment time. What happens if the package manager you have been using is no longer there or is having network issues, how can you deploy now?! My response to this is you should never be installing dependencies at deployment time; installing dependencies is part of the build phase of a deployment pipeline, the output of which is an artefact with them included.  The only time I check in any dependencies is when there is no pathway to use a package manager. However in cases like this I often will host then in something like a private nugget feed, this way I can control all dependencies in a consistent manner.  There is no correct way to manage dependencies, but I side on keeping your VCS clean and rely on your build artefacts to make sure you can deploy at any time.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/599c94c76f7d68ee1b638e67e18f08a759650d8f.jpg"></article>]]></description>
            <link>https://thegrid.ai/public-abstract-gravy-power/to-check-in-dependencies-or-not-to-check-in-dependencies/index.html</link>
            <guid isPermaLink="false">30276b10-b5d7-4281-a0e2-2f03dd360495</guid>
            <pubDate>Mon, 04 Jan 2016 06:07:57 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Use and ORM ]]></title>
            <description><![CDATA[<article><h1>Use and ORM </h1><p>I am a big advocate of TDD and would love to see interfaces on all of the Sitecore types, this is a big ask to the product team as they have new a wonderful features to work on.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/2c184847f784d7a19238e3ede9cfe88b0e6d9ec1.jpg"></article>]]></description>
            <link>https://thegrid.ai/public-abstract-gravy-power/use-and-orm/index.html</link>
            <guid isPermaLink="false">d5963e48-66b6-4dda-9a02-dde442c4b951</guid>
            <pubDate>Mon, 04 Jan 2016 06:03:42 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[The Employer ]]></title>
            <description><![CDATA[<article><h1>The Employer </h1><p>I tweeted an image a while back and thought I would share it here as well. This is classic and would make for great motivation, but there is a good point behind it.  In my limited experience it has been hard to get across the point of why I write things test first. Often I come back to code just to find that the tests are failing. This makes me sad and fell a bit defeated as I took the time and the care to create something that was testable. I don’t blame the developers who forget about the tests but a lack of professionalism in the software development field. For me this goes back to my training, I was simply not taught about TDD and had to discover and learn about it on my own. I believe that the responsibility of creating better code falls to three parties. </p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/87fe827f10b01fe62e039feb5585784d4e760773.jpg"></article>]]></description>
            <link>https://thegrid.ai/public-abstract-gravy-power/the-developer/index.html</link>
            <guid isPermaLink="false">9ae479c1-6f39-4841-81de-066366d1c043</guid>
            <pubDate>Mon, 04 Jan 2016 05:51:46 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Everything starts somewhere]]></title>
            <description><![CDATA[<article><h1>Everything starts somewhere</h1><p>This is something that I have been wanting to do for a long time but never had the motivation to get off my ass and just do it. I will be trying to post both videos and text on a range of topics to no set schedule. </p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/fc08a8baf011d96b7af9cb9b2ae7ccb62cba7c1d.jpg"></article>]]></description>
            <link>https://thegrid.ai/public-abstract-gravy-power/everything-starts-somewhere/index.html</link>
            <guid isPermaLink="false">c55adc7b-7a45-4f26-8612-3b5ea2ee7510</guid>
            <pubDate>Mon, 04 Jan 2016 05:47:49 GMT</pubDate>
        </item>
    </channel>
</rss>